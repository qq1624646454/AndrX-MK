*************************************************************************************
*    README
*                                by Jielong Lin.  @2020-01-18. All rights reserved.
*
* Rev-1.0: initialized.
*************************************************************************************


runtime shared library path can be one of the follows:
    /reach/vendor/modules/bin
    /reach/vendor/modules/lib

@ mkutils/core/shared_library.mk
@ mkutils/core/static_library.mk 
JLLim_DEBUG := 0  # mm will trigger target is built only when the source code is changed, 
                  # in meanwhile without any log detail
JLLim_DEBUG := 1  # mm will trigger target is built anytime, in meanwhile with log detail 



mm        #compile then link into target file
mm clean  # remove all by delete TOPDIR/out




===============================================
How to compile source code for C language code
-----------------------------------------------
demo/
├── AndrX.mk
├── demo1
│   ├── AndrX.mk
│   ├── app
│   │   ├── AndrX.mk
│   │   └── main.c
│   ├── shared
│   │   ├── AndrX.mk
│   │   └── my.c
│   └── static
│       ├── AndrX.mk
│       └── my.c
└── func1
    ├── AndrX.mk
    ├── main.c
    └── subfunc1
        ├── A
        │   ├── AA
        │   │   └── test.c
        │   └── test.c
        ├── AndrX.mk
        ├── AndrX.mk.orig
        ├── AndrX.mk.orig1
        ├── B
        │   └── test.c
        ├── C
        │   └── test.c
        ├── libtest2.a
        ├── libtest.a
        ├── libY.a
        ├── Makefile
        └── test.c
-----------------------------------------------
JLLim@S.#
JLLim@S.# #Cross build target over mdm9x07
JLLim@S.# source mkutils/envsetup_for_mdm9x07
JLLim@S.#
JLLim@S.# cd demo/func1/subfunc1/
JLLim@S.#
JLLim@S.# mm
[Run] ONE_SHOT_MAKEFILE=demo/func1/subfunc1/AndrX.mk make -C /ibbyte1024MB/projects/github.com/qq1624646454/AndrX-MK/platform-x86_64 -f mkutils/core/main.mk all_modules
make: Entering directory `/ibbyte1024MB/projects/github.com/qq1624646454/AndrX-MK/platform-x86_64'
mkdir: created directory ‘out/objs/demo’
mkdir: created directory ‘out/objs/demo/func1’
mkdir: created directory ‘out/objs/demo/func1/subfunc1’
mkdir: created directory ‘out/objs/demo/func1/subfunc1/shared_library’
mkdir: created directory ‘out/objs/demo/func1/subfunc1/shared_library/build’
mkdir: created directory ‘out/objs/demo/func1/subfunc1/shared_library/build/C’
mkdir: created directory ‘out/objs/demo/func1/subfunc1/shared_library/build/B’
mkdir: created directory ‘out/objs/demo/func1/subfunc1/shared_library/build/A’
mkdir: created directory ‘out/objs/demo/func1/subfunc1/shared_library/build/A/AA’
[Build] recipe for target out/objs/demo/func1/subfunc1/shared_library/libsubfunc1.so
cc   out/objs/demo/func1/subfunc1/shared_library/build/C/test.o  out/objs/demo/func1/subfunc1/shared_library/build/B/test.o  out/objs/demo/func1/subfunc1/shared_library/build/A/AA/test.o  out/objs/demo/func1/subfunc1/shared_library/build/A/test.o  out/objs/demo/func1/subfunc1/shared_library/build/main.o  out/objs/demo/func1/subfunc1/shared_library/build/test.o -Wl,--soname,libsubfunc1.so   -Wl,-rpath,/reach/vendor/modules/usr/bin:/reach/vendor/modules/lib   -shared  -Wl,--whole-archive   -Wl,--no-whole-archive -Wl,--start-group   -Wl,--end-group -o out/objs/demo/func1/subfunc1/shared_library/libsubfunc1.so
make: Leaving directory `/ibbyte1024MB/projects/github.com/qq1624646454/AndrX-MK/platform-x86_64'
JLLim@S.#
JLLim@S.#
JLLim@S.#
JLLim@S.# tree ../../../out/

JLLim@S.#
JLLim@S.#
JLLim@S.# ENV_INIT=0
JLLim@S.# source mkutils/envsetup_for_mdm9x07
JLLim@S.#
JLLim@S.# cd demo
JLLim@S.#
JLLim@S.# mm

JLLim@S.#
JLLim@S.# tree ../out/ -L 3
../out/
└── objs
    ├── executable
    │   ├── build
    │   ├── demo-app
    │   └── main
    ├── shared_library
    │   ├── build
    │   ├── libmy.so
    │   ├── libsubfunc1.so
    │   ├── libsubfunc2.so
    │   ├── libsubfuncX.so
    │   └── libsubfuncY.so
    └── static_library
        ├── build
        ├── libHello.a
        ├── libHello__x.a
        ├── libmy.a
        ├── libWorld.a
        └── libWorld___x.a

#####
##### If target is used for running intel platform, please do as follows:
#####

ENV_INIT=0 #prepare for re-source environment initialized, please set ENV_INIT=0
source mkutils/envsetup_for_x86_64

cd path-to-module/
mm                    #compile then link into target file
mm clean              #clean TOPDIR/out



@ mkutils/core/shared_library.mk
@ mkutils/core/static_library.mk 
JLLim_DEBUG := 0  # mm will trigger target is built only when the source code is changed, 
                  # in meanwhile without any log detail
JLLim_DEBUG := 1  # mm will trigger target is built anytime, in meanwhile with log detail 

mm clean  # remove all by delete TOPDIR/out

